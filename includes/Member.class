<?php
/* Class name: 	Member
 * Description: A class that creates a User for members-only web app.
 * Citation:	PHP, MySQL, Javascript & HTML5 for Dummies, S.Suehring, J.Valade
 * Citation: Ellen Bajcar https://raw.githubusercontent.com/ebajcar/web10199_worksheets/master/worksheets/Member.class
 * 
 * Author: Mariah Falzon
 * Date Updated: August 12, 2023
 * Version: 3.0
 * 
 * Member is a data-aware class; data source that connects to a database
 * 
 * |----------------------------------------
 * | $id
 * | $player
 * | $password
...

 * | $isLoggedIn
 * |----------------------------------------
 * | __construct
 * | registerMember($safeUser, $newPass)
 * | authenticate($user, $pass)
 * | _initUser()
 * | _setSession()
 * |----------------------------------------
 */
 class Member {
	private $id;
	private $player;
	private $password;

	// TODO: add others fields from the registration form (don't forget to add them in methods appropriately
	private $isLoggedIn = false;
 
	/* Constructor: 
	 * starts session and calls_initUser() method to initialize user info
	 */
	function __construct() {
		if (session_id() == "") {
			session_start();
		}
		$this->_initUser();
	}    


	/* 
	* Add the registerMember($safeUser) code 
	Citation: Code Provided by Professor Ellen Bajcar 
	https://raw.githubusercontent.com/ebajcar/web10199_worksheets/master/worksheets/registerMember.method
	*/


public function registerMember($safeUser, $newPass) {
		//connect to database
        require('info.php');
		try {
      $dbh = new PDO("mysql:host=localhost;dbname=$DATABASENAME", $USERNAME, $PASSWORD);
		} catch (Exception $e) {
			error_log("Cannot connect to MySQL: $e\n", 3, "myErrors.log");
			return false;
		}
		// if not using UNIQUE in database, ensure that the user does not exists already		
		// otherwise, insert new record
		$secret = $newPass; 
		$date = date("Y-m-d");
		//$address = $_SESSION['address'];
		$command = "INSERT INTO members ( player, secret, date ) 
                VALUES ( '$safeUser','$secret','$date')";							
		if (!$result = $dbh->prepare($command)) {
			error_log("Query does not appear to be correct: $safeUser\n", 3, "myErrors.log");
			return false;
		}	
		if (!$result->execute() ) {
			error_log("User already exists. $safeUser\n", 3, "myErrors.log");
			return false;	
		}	
		$this->_setSession();
		$dbh = "";
		return true;		
	}		


	/* 
	* Add the authenticate method 
	public function authenticate($user, $pass)
	Citation: Code Provided by Professor Ellen Bajcar
	https://raw.githubusercontent.com/ebajcar/web10199_worksheets/master/worksheets/authenticate.method
	*/

	public function authenticate($user, $pass) {
		// connect to database
		require('info.php');
		try {
				  $dbh = new PDO("mysql:host=localhost;dbname=$DATABASENAME",
								$USERNAME, $PASSWORD);
		} catch (Exception $e) {
			error_log("Cannot connect to MySQL: $e\n", 3, "myErrors.log");
			return false;
		}
		
		// retrieve user's record
		$safeUser = $user;
		$inPassword = $pass;
		$query = "SELECT * FROM members WHERE player='$safeUser'";
		if (!$result = $dbh->prepare($query)) {
			error_log("Cannot retrieve account for: $safeUser\n", 3, "myErrors.log");
			return false;
		}
		
		// compare userid and password
		if ( $result->execute() ) {
			try{
			$row = $result->fetch();		
			$dbPassword = $row['secret'];			
			if ($inPassword != $dbPassword) {
				error_log("Passwords do not match. $safeUser\n", 3, "myErrors.log");
				return;				
			}
		}
		 catch(PDOException $e) {
                //echo "Error: " . $e->getMessage();
                error_log("Error? $safeUser\n". $e->getMessage(), 3, "myErrors.log");
                return;
		 }
		}
		
		
		$this->player = $row['player'];
		$this->password = $row['secret'];
		$this->isLoggedIn = true;		
		//update current session info
		$this->_setSession();
		$dbh = "";
		return true;
	 }



	/* 
	 *  private function _initUser() called by the constructor
	 */
	private function _initUser() {
		if (session_id() == '') {
			session_start();
		}		
		$this->id = $_SESSION['id'];
		$this->player = $_SESSION['player'];
		$this->password = $_SESSION['password'];
		$this->isLoggedIn = $_SESSION['isLoggedIn'];
	}
	
	/* 
	 *  public function _setSession() called from authenticate() function
	 */
	private function _setSession() {
		$_SESSION['id'] = $this->id;
		$_SESSION['player'] = $this->player;
		$_SESSION['password'] = $this->password;
		$_SESSION['isLoggedIn'] = $this->isLoggedIn;
	}	

 } // end class Member
 ?>